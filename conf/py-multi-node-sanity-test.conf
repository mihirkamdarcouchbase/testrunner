### XDCR ####
#xdcr.advFilteringXDCR.XDCRAdvFilterTests.test_xdcr_with_filter,items=1000,pause=C1:C2,rdirection=bidirection,ctopology=chain,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma 'C1-key-1'),default@C2=filter_expression:REGEXP_CONTAINS(META()dotidcomma 'C2-key-1'),demand_encryption=1
xdcr.uniXDCR.unidirectional.load_with_ops,items=5000,ctopology=chain,rdirection=unidirection,update=C1,delete=C1
#xdcr.advFilteringXDCR.XDCRAdvFilterTests.test_xdcr_with_filter,items=1000,rdirection=unidirection,ctopology=chain,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma 'C1-key-1')
xdcr.biXDCR.bidirectional.load_with_async_ops,replicas=1,items=1000,ctopology=chain,rdirection=bidirection,update=C1-C2,delete=C1-C2
# Advance Filtering
#xdcr.advFilteringXDCR.XDCRAdvFilterTests.test_xdcr_with_filter,items=10000,rdirection=unidirection,ctopology=chain,replication_type=xmem,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'0$'),failure_restart_interval:20,timeout_percentage:60
xdcr.filterXDCR.XDCRFilterTests.test_xdcr_with_filter,items=5000,rdirection=unidirection,ctopology=chain,replication_type=xmem,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma '0$'),skip_key_validation=True
# Prioritization of replications
xdcr.prioritizationXDCR.XDCRPrioritization.test_priority,initial=True,items=100000,rdirection=unidirection,ctopology=chain,replication_type=xmem,standard_buckets=1,default@C1=priority:Medium,standard_bucket_1@C1=priority:High


rebalance.rebalancein.RebalanceInTests.rebalance_in_with_ops,nodes_in=3,replicas=1,items=1000,doc_ops=create;update;delete
rebalance.rebalanceout.RebalanceOutTests.rebalance_out_with_ops,nodes_out=3,replicas=1,items=1000,services_init=kv-kv-kv-kv,services_out=kv
swaprebalance.SwapRebalanceBasicTests.do_test,replica=1,num-buckets=1,num-swap=1,items=1000
failover.failovertests.FailoverTests.test_failover_normal,replica=1,load_ratio=1,num_failed_nodes=1,failover.failovertests.FailoverTests.test_failover_normal,replica=1,load_ratio=1,num_failed_nodes=1,withMutationOps=True,services_init=kv-kv-kv-kv,services_out=kv
rackzone.rackzonetests.RackzoneTests.test_check_default_zone_create_by_default,items=1000
rackzone.rackzonetests.RackzoneTests.test_create_zone_with_upper_lower_number_and_space_name,items=1000
view.createdeleteview.CreateDeleteViewTests.test_view_ops,ddoc_ops=update,test_with_view=True,num_ddocs=2,num_views_per_ddoc=3,items=1000,sasl_buckets=1,standard_buckets=1,nodes_init=1

### WATSON NEW FEATURE ###
fts.stable_topology_fts.StableTopFTS.run_default_index_query,items=1000,query="{\"match\": \"safiya@mcdiabetes.com\", \"field\":\"email\"}",expected_hits=1000,cluster=D+F,F
ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest.test_backup_restore_sanity,items=1000
# bkrs 1024 data files
ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest.test_cbbackupmgr_with_n_vbuckets_per_shard,num_shards=200,create-views=True,disable-views=True
security.x509tests.x509tests.test_basic_ssl_test,default_bucket=False,SSLtype=openssl

#moving tests from py-multi-node-sanity-new-feat.conf to this conf file.
clitest.importexporttest.ImportExportTests.test_export_and_import_back,imex_type=json,format_type=list,import_back=True,nodes_init=2
autofailovertests.AutoFailoverTests.test_30s_timeout_stop,replicas=2,keys-count=1000,num-buckets=2

#ephemeral buckets
buckettests.CreateBucketTests.test_ephemeral_buckets,default_bucket=false,sasl_buckets=2,bucket_size=100

# This test is for eventing sanity
eventing.eventing_sanity.EventingSanity.test_create_mutation_for_dcp_stream_boundary_from_beginning,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True
eventing.eventing_sanity.EventingSanity.test_source_doc_mutations_with_timers,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True,source_bucket_mutation=true
eventing.eventing_sanity.EventingSanity.test_pause_resume_execution,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True
eventing.eventing_curl.EventingCurl.test_curl_get,nodes_init=2,services_init=kv-eventing,dataset=default,reset_services=True,skip_cleanup=True,path=basic-auth,curl_user=postman,curl_password=password,auth_type=basic,curl=True

# n1ql+fts integration - disabled for now as this test fails if it is not the first test in the conf
#tuqquery.n1ql_fts_sanity.N1qlFTSSanityTest.test_n1ql_syntax_select_from_let,nodes_init=4,services_init=kv:index:fts:n1ql-kv:index:fts:n1ql-kv:index:fts:n1ql-kv:index:fts:n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True


# Analytics
cbas.cbas_bucket_operations.CBASBucketOperations.load_docs_in_cb_bucket_before_and_after_cbas_connect,cb_bucket_name=default,cbas_bucket_name=default_bucket,cbas_dataset_name=default_ds,items=100000,cluster=D

# These test should always be in the end as it reset the serivce set on the node
2i.indexscans_2i.SecondaryIndexingScanTests.test_multi_create_query_explain_drop_index,groups=simple,doc-per-day=10,dataset=default,gsi_type=memory_optimized,reset_services=True
2i.gsi_rebalance_2i.SecondaryIndexingRebalanceTests.test_gsi_rebalance_out_indexer_node,doc-per-day=1000,dataset=array,nodes_init=4,services_init=kv-index-index-n1ql,groups=simple,reset_services=True
2i.gsi_index_partitioning.GSIIndexPartitioningTests.test_index_scans,items=10000,nodes_init=4,services_init=kv:n1ql-index-index-index,groups=simple,reset_services=True,doc-per-day=1,dataset=bigdata,create_primary_index=False



